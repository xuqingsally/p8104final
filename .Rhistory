heartrate+respirationrate+bpdiastolic+bpsystolic, data = df_rm)
#LOOCV and give the MSE
cv_err <- cv.glm(df_rm, glm_best)
cv_err$delta
#the MSE in our final model
anova(lm_best_2)$`Mean Sq`[10]
#we can find that the MSE in LOOCV is just slighter larger than the MSE in our final model
#Then we state that our model can be generalized well and have good predictive capability
#K-fold CV
#set up folds for cross-validation
folds <- cvFolds(nrow(df_rm), K = 10, R = 40)
# perform cross-validation for an LS regression model
cvFitLm <- cvLm(lm_best_2, cost = rtmspe, folds = folds, trim = 0.1)
#check the CV in this cross validation and the MSE in our final model and we find that they are close
cvFitLm
#Then we state that our model can be generalized well and have good predictive capability
??cvFolds
round(t(summary(lm(log_los ~ is30dayreadmit + cindex + evisit + ageyear + temperature + heartrate + respirationrate + bpdiastolic + bpsystolic,df_rm))$coef[, 1:2]), 4)
round(t(summary(lm(log_los ~ is30dayreadmit + cindex + evisit + ageyear + temperature + heartrate + respirationrate + bpdiastolic + bpsystolic,df_rm))$coef[, 1:3]), 4)
glm_best <- glm(log_los~is30dayreadmit+cindex+evisit+ageyear+temperature+
heartrate+respirationrate+bpdiastolic+bpsystolic, data = df_rm)
#LOOCV and give the MSE
cv_err <- cv.glm(df_rm, glm_best)
cv_err$delta
anova(lm_best_2)$`Mean Sq`[10]
bootstrap_results <- boot(df_rm, boot.fn, 10000)
View(bootstrap_results)
orig_step <- model_process_step(df_rm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(readxl)
library(data.table)
library(HH)
library(leaps)
library(car)
library(gridExtra)
library(knitr)
library(boot)
library(cvTools)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(readxl)
library(data.table)
library(HH)
library(leaps)
library(car)
library(gridExtra)
library(knitr)
library(boot)
library(cvTools)
# Chunk 2
#clean data and converting some variables
GH_data <- read_excel("GHProject_Dataset.xlsx") %>%
clean_names() %>%
group_by(patientid) %>%
dplyr::mutate(is30dayreadmit = as.character(is30dayreadmit))
#count number of visit and select ICU=0
mul <- count(GH_data)
GH_data_noICU <- left_join(GH_data,mul,by = "patientid") %>%
filter(icu_flag == 0) %>%
rename(num_visit = n) %>%
data.table()
#select first visit
setkey(GH_data_noICU, patientid)
df <- GH_data_noICU[J(unique(patientid)), mult = "first"]
#select variables we interested
df <- df %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, facilityzip, postalcode, facilityname))
# Chunk 3
#create a list for checking the potential categorical predictors
category_check_list <-
df %>%
dplyr::select(is30dayreadmit, evisit, mews, cindex, gender, race, religion, maritalstatus, insurancetype) %>%
apply(2, table)
names(category_check_list) <- c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype")
category_check_tbl <- tibble(variable = c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype"),
check_list = category_check_list)
#the summary data of potential continous predictors
data_summary <-
df %>%
dplyr::select(-c(is30dayreadmit, evisit, mews, cindex, gender, race,
religion, maritalstatus, insurancetype)) %>%
dplyr::select(-c(patientid, visitid, losdays2, num_visit)) %>%
gather(key = continuous_variable, value = value, ageyear:bpdiastolic) %>%
group_by(continuous_variable) %>%
summarise(min = min(value, na.rm = T),
first_quantile = quantile(value,  probs = 0.25, na.rm = T),
median = median(value, na.rm = T),
third_quantile = quantile(value,  probs = 0.75, na.rm = T),
max = max(value, na.rm = T))
kable(data_summary)
#we find the following four predictors should be combined
category_check_tbl$check_list[3]             #mews
category_check_tbl$check_list[4]             #cindex
category_check_tbl$check_list[6]             #race
category_check_tbl$check_list[7]             #religion
category_check_tbl$check_list[8]             #maritalstatus
# Chunk 4
#combine the level we choose
df$mews<-replace(df$mews, df$mews>3, "further deterioration/immediate action required")
df$mews<-replace(df$mews, df$mews<4, "normal/increase caution")
df$cindex<-replace(df$cindex, df$cindex>4,"severe")
df$cindex<-replace(df$cindex, df$cindex==3|df$cindex==4,"moderate")
df$cindex<-replace(df$cindex, df$cindex==2|df$cindex==1,"mild")
df$cindex<-replace(df$cindex, df$cindex==0,"normal")
df$race<-replace(df$race, df$race=="Natv Hawaii/Pacf Isl","Other/Multiracial")
df$religion<-replace(df$religion,
df$religion=="Angelican"|df$religion=="Hebrew"|df$religion=="Non Denominational"|df$religion=="Mormon",
"Other")
df$maritalstatus<-replace(df$maritalstatus, df$maritalstatus=="Civil Union","Married")
#change temperature and bmi
df$temperature[df$temperature < 24] <- NA
df$temperature[df$temperature > 47] <- NA
df$bmi[df$bmi < 7] <- NA
df$bmi[df$bmi > 50] <- NA
df$heartrate[df$heartrate > 220] <- NA
df$o2sat[df$o2sat > 200] <- NA
df$respirationrate[df$respirationrate > 50] <- NA
#omit the missing observations
#sum(is.na(df[,5]))  MEWS 163
#sum(is.na(df[,12])) maritalstatus 76
#sum(is.na(df[,13])) insurancetype 33
#sum(is.na(df[,14])) bmi 725
# "bpsystolic"     "o2sat"           "temperature"     "heartrate"       "respirationrate" "bpdiastolic"     "num_visit"      all have a few (<5) NAs
# impute these few ones by mean
df$bpdiastolic[is.na(df$bpdiastolic)] <- mean(df$bpdiastolic, na.rm = TRUE)
df$bpsystolic[is.na(df$bpsystolic)] <- mean(df$bpsystolic, na.rm = TRUE)
df$o2sat[is.na(df$o2sat)] <- mean(df$o2sat, na.rm = TRUE)
df$temperature[is.na(df$temperature)] <- mean(df$temperature, na.rm = TRUE)
df$heartrate[is.na(df$heartrate)] <- mean(df$heartrate, na.rm = TRUE)
df$respirationrate[is.na(df$respirationrate)] <- mean(df$respirationrate, na.rm = TRUE)
df <- df %>% dplyr::select(-bmi) %>% na.omit()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(readxl)
library(data.table)
library(HH)
library(leaps)
library(car)
library(gridExtra)
library(knitr)
library(boot)
library(cvTools)
# Chunk 2
#clean data and converting some variables
GH_data <- read_excel("GHProject_Dataset.xlsx") %>%
clean_names() %>%
group_by(patientid) %>%
dplyr::mutate(is30dayreadmit = as.character(is30dayreadmit))
#count number of visit and select ICU=0
mul <- count(GH_data)
GH_data_noICU <- left_join(GH_data,mul,by = "patientid") %>%
filter(icu_flag == 0) %>%
rename(num_visit = n) %>%
data.table()
#select first visit
setkey(GH_data_noICU, patientid)
df <- GH_data_noICU[J(unique(patientid)), mult = "first"]
#select variables we interested
df <- df %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, facilityzip, postalcode, facilityname))
# Chunk 3
#create a list for checking the potential categorical predictors
category_check_list <-
df %>%
dplyr::select(is30dayreadmit, evisit, mews, cindex, gender, race, religion, maritalstatus, insurancetype) %>%
apply(2, table)
names(category_check_list) <- c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype")
category_check_tbl <- tibble(variable = c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype"),
check_list = category_check_list)
#the summary data of potential continous predictors
data_summary <-
df %>%
dplyr::select(-c(is30dayreadmit, evisit, mews, cindex, gender, race,
religion, maritalstatus, insurancetype)) %>%
dplyr::select(-c(patientid, visitid, losdays2, num_visit)) %>%
gather(key = continuous_variable, value = value, ageyear:bpdiastolic) %>%
group_by(continuous_variable) %>%
summarise(min = min(value, na.rm = T),
first_quantile = quantile(value,  probs = 0.25, na.rm = T),
median = median(value, na.rm = T),
third_quantile = quantile(value,  probs = 0.75, na.rm = T),
max = max(value, na.rm = T))
kable(data_summary)
#we find the following four predictors should be combined
category_check_tbl$check_list[3]             #mews
category_check_tbl$check_list[4]             #cindex
category_check_tbl$check_list[6]             #race
category_check_tbl$check_list[7]             #religion
category_check_tbl$check_list[8]             #maritalstatus
# Chunk 4
#combine the level we choose
df$mews<-replace(df$mews, df$mews>3, "further deterioration/immediate action required")
df$mews<-replace(df$mews, df$mews<4, "normal/increase caution")
df$cindex<-replace(df$cindex, df$cindex>4,"severe")
df$cindex<-replace(df$cindex, df$cindex==3|df$cindex==4,"moderate")
df$cindex<-replace(df$cindex, df$cindex==2|df$cindex==1,"mild")
df$cindex<-replace(df$cindex, df$cindex==0,"normal")
df$race<-replace(df$race, df$race=="Natv Hawaii/Pacf Isl","Other/Multiracial")
df$religion<-replace(df$religion,
df$religion=="Angelican"|df$religion=="Hebrew"|df$religion=="Non Denominational"|df$religion=="Mormon",
"Other")
df$maritalstatus<-replace(df$maritalstatus, df$maritalstatus=="Civil Union","Married")
#change temperature and bmi
df$temperature[df$temperature < 24] <- NA
df$temperature[df$temperature > 47] <- NA
df$bmi[df$bmi < 7] <- NA
df$bmi[df$bmi > 50] <- NA
df$heartrate[df$heartrate > 220] <- NA
df$o2sat[df$o2sat > 200] <- NA
df$respirationrate[df$respirationrate > 50] <- NA
#omit the missing observations
#sum(is.na(df[,5]))  MEWS 163
#sum(is.na(df[,12])) maritalstatus 76
#sum(is.na(df[,13])) insurancetype 33
#sum(is.na(df[,14])) bmi 725
# "bpsystolic"     "o2sat"           "temperature"     "heartrate"       "respirationrate" "bpdiastolic"     "num_visit"      all have a few (<5) NAs
# impute these few ones by mean
df$bpdiastolic[is.na(df$bpdiastolic)] <- mean(df$bpdiastolic, na.rm = TRUE)
df$bpsystolic[is.na(df$bpsystolic)] <- mean(df$bpsystolic, na.rm = TRUE)
df$o2sat[is.na(df$o2sat)] <- mean(df$o2sat, na.rm = TRUE)
df$temperature[is.na(df$temperature)] <- mean(df$temperature, na.rm = TRUE)
df$heartrate[is.na(df$heartrate)] <- mean(df$heartrate, na.rm = TRUE)
df$respirationrate[is.na(df$respirationrate)] <- mean(df$respirationrate, na.rm = TRUE)
df <- df %>% dplyr::select(-bmi) %>% na.omit()
# Chunk 5
#histogram of outcome
outcome_nontran <-
ggplot(df,aes(x = losdays2))+
geom_histogram(bins = 20) +
ggtitle("histogram of length of days") +
theme(plot.title = element_text(hjust = 0.5))
outcome_tran <- ggplot(df,aes(x = log(losdays2)))+
geom_histogram(bins = 15) +
ggtitle("histogram of log(length of days)") +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(outcome_nontran, outcome_tran)
#use log of losdays2
df <- df %>%
mutate(log_los=log(losdays2)) %>%
dplyr::select(-patientid,-visitid,-losdays2,-num_visit)
#Now we have our final data for regression
# Chunk 6
lm_is<-lm(log_los~factor(is30dayreadmit),data=df)
lm_mews<-lm(log_los~factor(mews),data=df)
lm_cindex<-lm(log_los~cindex,data=df)
lm_evisit<-lm(log_los~evisit,data=df)
lm_ageyear<-lm(log_los~ageyear,data=df)
lm_gender<-lm(log_los~factor(gender),data=df) # not sig
lm_race<-lm(log_los~factor(race),data=df)  #not sig
lm_religion<-lm(log_los~factor(religion),data=df) # only some levels sig
lm_maritalstatus<-lm(log_los~factor(maritalstatus),data=df) # not sig
lm_insurancetype<-lm(log_los~factor(insurancetype),data=df) # only some levels sig, kept in model
lm_tem<-lm(log_los~temperature,data=df)
lm_hear<-lm(log_los~heartrate,data=df)
lm_res<-lm(log_los~respirationrate,data=df)
lm_bpd<-lm(log_los~bpdiastolic,data=df)
lm_bps<-lm(log_los~bpsystolic,data=df)
lm_o2<-lm(log_los~o2sat,data=df)
#remove bmi - too many NAs
lm_full<-lm(log_los~mews+is30dayreadmit+cindex+evisit+ageyear+temperature+heartrate+respirationrate+bpdiastolic+bpsystolic+o2sat + insurancetype,data=df)
# results from stepwise automatic
summary(step(lm_full, direction='both', trace = 0))
#select
best <- function(model, ...)
{
subsets <- regsubsets(formula(model), model.frame(model),nvmax=length(model$coefficients)-1, ...)
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))
return(subsets)
}
# Select the 'best' 1 models of all subsets
round(best(lm_full, nbest = 1), 4) #remove mews and O2sta based on this output
lm_best <- lm(log_los~ is30dayreadmit + cindex + evisit + ageyear +
temperature + heartrate + respirationrate + bpdiastolic +
bpsystolic + insurancetype, data = df)
summary(lm_best)
outlier_y <- which(abs(rstandard(lm_best)) > 2.5)
outliers_df <- df[which(abs(rstandard(lm_best)) > 2.5),]
View(outliers_df)
summary(outliers_df)
summary(df)
df_rm <- df[-outlier_y,]
summary(outliers_df)
summary(df_rm)
boxplot(outliers_df)
outlier_test<-outlier_y %>%
dplyr::select(-is30dayreadmit,-mews,-cindex,-gender,-race,-religion,-maritalstatus,-insurancetype)
df_rm_test<-df_rm_test %>%
dplyr::select(-is30dayreadmit,-mews,-cindex,-gender,-race,-religion,-maritalstatus,-insurancetype)
outlier_test<-outlier_y %>%
dplyr::select(-is30dayreadmit,-mews,-cindex,-gender,-race,-religion,-maritalstatus,-insurancetype)
outlier_test<-outliers_df %>%
dplyr::select(-is30dayreadmit,-mews,-cindex,-gender,-race,-religion,-maritalstatus,-insurancetype)
df_rm_test<-df_rm %>%
dplyr::select(-is30dayreadmit,-mews,-cindex,-gender,-race,-religion,-maritalstatus,-insurancetype)
boxplot(outlier_test)
boxplot(df_rm_test)
par(mfrow=c(2,2))
boxplot(outlier_test)
boxplot(df_rm_test)
par(mfrow=c(2,2))
boxplot(outlier_test)
boxplot(df_rm_test)
summary(outlier_test)
summary(df_rm_test)
out<-outlier_test$evisit
rm<-df_rm_test$evisit
var.test(out,rm, alternative = "two.sided")
res<-t.test(out,rm, var.equal=FALSE, paired=FALSE)
t.test(out,rm, var.equal=FALSE, paired=FALSE)
out<-outlier_test$ageyear
rm<-df_rm_test$ageyear
var.test(out,rm, alternative = "two.sided")
t.test(out,rm, var.equal=FALSE, paired=FALSE)
out<-outlier_test$bpsystolic
rm<-df_rm_test$bpsystolic
var.test(out,rm, alternative = "two.sided")
t.test(out,rm, var.equal=FALSE, paired=FALSE)
out<-outlier_test$o2sat
rm<-df_rm_test$o2sat
var.test(out,rm, alternative = "two.sided")
t.test(out,rm, var.equal=FALSE, paired=FALSE)
out<-outlier_test$temperature
rm<-df_rm_test$temperature
var.test(out,rm, alternative = "two.sided")
t.test(out,rm, var.equal=FALSE, paired=FALSE)
t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
t_function<- function(x){
out<-outlier_test$x
rm<-df_rm_test$x
var.test(out,rm, alternative = "two.sided")
p-value=t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p-value)
}
t_function(ageyear)
t_function<- function(x){
out<-outlier_test$x
rm<-df_rm_test$x
p-value=t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p-value)
}
t_function(ageyear)
t_function<-function(x,y){
out<-x
rm<-y
p-value=t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p-value)
}
t_function<-function(x,y){
out<-x
rm<-y
p-value=t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p-value)
}
t_function(outlier_test$ageyear,df_rm_test$ageyear)
t_function<-function(x,y){
out<-x
rm<-y
p-value<-t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p-value)
}
t_function(outlier_test$ageyear,df_rm_test$ageyear)
t_function<-function(x,y){
out<-x
rm<-y
p_value<-t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p_value)
}
t_function(outlier_test$ageyear,df_rm_test$ageyear)
t_function<-function(x,y){
out<-x
rm<-y
p_value<-t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p_value)
}
t_function(outlier_test$evisit,df_rm_test$evisit)
t_function(outlier_test$ageyear,df_rm_test$ageyear)
t_function(outlier_test$bpsystolic,df_rm_test$bpsystolic)
t_function(outlier_test$o2sat ,df_rm_test$o2sat)
t_function(outlier_test$temperature,df_rm_test$temperature)
t_function(outlier_test$respirationrate,df_rm_test$respirationrate)
t_function(outlier_test$heartrate,df_rm_test$heartrate)
t_function(outlier_test$bpdiastolic,df_rm_test$bpdiastolic)
par(mfrow=c(2,2))
boxplot(outlier_test$ageyear)
boxplot(df_rm_test$ageyear)
t_function<-function(x,y){
out<-x
rm<-y
p_value<-t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p_value)
}
t_function(outlier$evisit,df_rm$evisit)
t_function(outlier$ageyear,df_rm$ageyear) #different
t_function(outlier$bpsystolic,df_rm$bpsystolic)
t_function(outlier$o2sat ,df_rm$o2sat)
t_function(outlier$temperature,df_rm$temperature)
t_function(outlier$respirationrate,df_rm$respirationrate)
t_function(outlier$heartrate,df_rm$heartrate)
t_function(outlier$bpdiastolic,df_rm$bpdiastolic)
t_function<-function(x,y){
out<-x
rm<-y
p_value<-t.test(out,rm, var.equal=FALSE, paired=FALSE)[3]
return(p_value)
}
t_function(outlier_df$evisit,df_rm$evisit)
t_function(outlier_df$ageyear,df_rm$ageyear) #different
t_function(outlier_df$bpsystolic,df_rm$bpsystolic)
t_function(outlier_df$o2sat ,df_rm$o2sat)
t_function(outlier_df$temperature,df_rm$temperature)
t_function(outlier_df$respirationrate,df_rm$respirationrate)
t_function(outlier_df$heartrate,df_rm$heartrate)
t_function(outlier_df$bpdiastolic,df_rm$bpdiastolic)
t_function(outliers_df$evisit,df_rm$evisit)
t_function(outliers_df$ageyear,df_rm$ageyear) #different
t_function(outliers_df$bpsystolic,df_rm$bpsystolic)
t_function(outliers_df$o2sat ,df_rm$o2sat)
t_function(outliers_df$temperature,df_rm$temperature)
t_function(outliers_df$respirationrate,df_rm$respirationrate)
t_function(outliers_df$heartrate,df_rm$heartrate)
t_function(outliers_df$bpdiastolic,df_rm$bpdiastolic)
age_box<-left_join(outlier$ageyear,outlier$ageyear)
age_box<-left_join(outliers_df$ageyear,df_rm$ageyear)
test<- data.frame(outliers_df$ageyear,df_rm$ageyear)
boxplot(outliers_df$ageyear)
boxplot(df_rm$ageyear,add=TRUE)
boxplot(outliers_df$ageyear)
boxplot(df_rm$ageyear,add=TRUE)
ggplot()+
geom_boxplot(data=outliers, aes( y=ageyear)) +
geom_boxplot(daya=df_rm,aes(y=ageyear))
ggplot()+
geom_boxplot(data=outliers_df, aes( y=ageyear)) +
geom_boxplot(daya=df_rm,aes(y=ageyear))
ggplot()+
geom_boxplot(data=outliers_df, aes( y=ageyear)) +
geom_boxplot(data=df_rm,aes(y=ageyear))
ggplot()+
geom_boxplot(data=outliers_df, aes( y=ageyear))
p<-ggplot()+
geom_boxplot(data=outliers_df, aes( y=ageyear)) +
geom_boxplot(data=df_rm,aes(y=ageyear))
p
age<-rbind(outliers_df$ageyear,df_rm$ageyear)
outlier_plot<-ggplot(outliers_df, aes( y=ageyear))+
geom_boxplot()
df_rm_plot<-ggplot(data=df_rm,aes(y=ageyear))
geom_boxplot()
grid.newpage()
grid.draw(rbind(ggplotGrob(outlier_plot), ggplotGrob(df_rm_plot), size = "last"))
outlier_plot<-ggplot(outliers_df, aes( y=ageyear))+
geom_boxplot()
outlier_plot
as.tibble(age=df_rm$ageyear,data=rep("except outlier",nrow(df_rm$ageyear)))
as.tibble(ori,age=df_rm$ageyear,data=rep("except outlier",nrow(df_rm$ageyear)))
tibble(age=df_rm$ageyear,data=rep("except outlier",nrow(df_rm$ageyear)))
nrow(df_rm$ageyear)
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear)))
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) )
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) ) %>%
ggplot()+
geom_boxplot()
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) ) %>%
ggplot(aes(x=age))+
geom_boxplot()
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) ) %>%
ggplot(aes(y=age))+
geom_boxplot()
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) ) %>%
boxplot()
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) )
tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) ) %>%
group_by(data) %>%
ggplot(aes(y=age))+
geom_boxplot()
a<-tibble(age=df_rm$ageyear,data=rep("except outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) ) %>%
group_by(data)
a
ggplot(a,aes(y=age))+
geom_boxplot()
ggplot(a,aes(y=age),group=data)+
geom_boxplot()
boxplot(a)
View(a)
ggplot(a,aes(x=data,y=age),group=data)+
geom_boxplot()
tibble(age=df_rm$ageyear,data=rep("exclude outlier",length(df_rm$ageyear))) %>%
bind_rows(tibble(age=outliers_df$ageyear,data=rep("outlier",length(outliers_df$ageyear))) ) %>%
group_by(data) %>%
ggplot(aes(x=data,y=age),group=data)+
geom_boxplot() +
labs(title="Distribution of age in outliers and other")
t_function(outliers_df$ageyear,df_rm$ageyear) #different

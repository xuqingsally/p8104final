df_check <-
df %>%
as.tibble() %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, postalcode, facilityname, facilityzip)) %>%
rename(num_visit = n)
category_check_list <-
df_check %>%
dplyr::select(is30dayreadmit, evisit, mews, cindex, gender, race, religion, maritalstatus, insurancetype) %>%
apply(2, table)
names(category_check_list) <- c("is30dayreadmit", "evisit", "mews", "cindex", "gender", "race", "religion", "maritalstatus", "insurancetype")
df_check %>%
dplyr::select(-c(is30dayreadmit, evisit, mews, cindex, gender, race,
religion, maritalstatus, insurancetype)) %>%
dplyr::select(-c(patientid, visitid, losdays2, num_visit)) %>%
gather(key = continuous_variable, value = value, ageyear:bpdiastolic) %>%
group_by(continuous_variable) %>%
summarise(min = min(value, na.rm = T),
mean = mean(value, na.rm = T),
median = median(value, na.rm = T),
max = max(value, na.rm = T))
df$mews<-replace(df$mews, df$mews>5, "immediate action required")
df$mews<-replace(df$mews, df$mews==4|df$mews==5, "further deterioration")
df$mews<-replace(df$mews, df$mews==2|df$mews==3, "increase caution")
df$mews<-replace(df$mews, df$mews==0|df$mews==1, "normal")
df$cindex<-replace(df$cindex, df$cindex==0,"normal")
df$cindex<-replace(df$cindex, df$cindex==1|df$cindex==2,"mild")
df$cindex<-replace(df$cindex, df$cindex==3|df$cindex==4,"moderate")
df$cindex<-replace(df$cindex, df$cindex==5,"severe")
df[df$temperature < 15] <- NA
df[df$temperature > 47] <- NA
df[df$bmi < 7] <-NA
df<-df %>%
mutate(log_los=log(losdays2))
lm13<-lm(log_los~factor(mews)+factor(is30dayreadmit)+factor(cindex)+evisit+ageyear+factor(gender)+factor(race)+factor(religion)+factor(maritalstatus)+factor(insurancetype)+bmi,data=df)
summary(lm13)
cor(df)
round(best(lm13, nbest = 1), 4)
best <- function(model, ...)
{
subsets <- regsubsets(formula(model), model.frame(model), ...)
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))
return(subsets)
}
round(best(lm13, nbest = 1), 4)
rm(lm13)
lm13<-lm(log_los~factor(mews)+factor(is30dayreadmit)+factor(cindex)+evisit+ageyear+factor(gender)+factor(race)+factor(religion)+factor(maritalstatus)+factor(insurancetype)+bmi,data=df)
best <- function(model, ...)
{
subsets <- regsubsets(formula(model), model.frame(model), ...)
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))
return(subsets)
}
round(best(lm13, nbest = 1), 4)
lm13$terms
lm13<-lm(log_los~mews+factor(is30dayreadmit)+factor(cindex)+evisit+ageyear+factor(gender)+factor(race)+factor(religion)+factor(maritalstatus)+factor(insurancetype)+bmi,data=df)
best <- function(model, ...)
{
subsets <- regsubsets(formula(model), model.frame(model), ...)
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))
return(subsets)
}
# Select the 'best' 1 models of all subsets
round(best(lm13, nbest = 1), 4)
lm13<-lm(log_los~mews+is30dayreadmit+cindex+evisit+ageyear+gender+race+religion+maritalstatus+insurancetype+bmi,data=df)
round(best(lm13, nbest = 1), 4)
t<-round(best(lm13, nbest = 1), 4)
class(t)
subsets <- regsubsets(formula(lm13), model.frame(lm13), ...)
subsets <- regsubsets(formula(lm13), model.frame(lm13))
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))
subsets
summary(lm13)
lm13<-lm(log_los~mews+is30dayreadmit+cindex+evisit+ageyear+bmi,data=df)
summary(lm13)
round(best(lm13, nbest = 1), 4)
step(lm13, direction='backward')
step(lm13, direction='both')
plot(df)
View(df)
summary(df)
names(df)
lm13<-lm(log_los~mews+is30dayreadmit+cindex+evisit+ageyear+bmi+temperature+heartrate+respirationrate+bpdiastolic+bpsystolic,data=df)
step(lm13, direction='both')
round(best(lm13, nbest = 1), 4)
library(tidyverse)
library(janitor)
library(readxl)
library(data.table)
library(HH)
library(leaps)
library(car)
round(best(lm13, nbest = 1), 4)
?regsubsets
lm13$coefficients
length(lm13$coefficients)
best <- function(model, ...)
{
subsets <- regsubsets(formula(model), model.frame(model),nvmax=length(model$coefficients)-1, ...)
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))
return(subsets)
}
round(best(lm13, nbest = 1), 4)
step(lm13, direction='both')
step(lm13, direction='backward')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(readxl)
library(data.table)
library(HH)
library(leaps)
library(car)
#clean data and converting some variables
GH_data <- read_excel("GHProject_Dataset.xlsx") %>%
clean_names() %>%
group_by(patientid) %>%
dplyr::mutate(is30dayreadmit = as.character(is30dayreadmit))
#count number of visit and select ICU=0
mul <- count(GH_data)
GH_data_noICU <- left_join(GH_data,mul,by = "patientid") %>%
filter(icu_flag == 0) %>%
rename(num_visit = n) %>%
data.table()
#select first visit
setkey(GH_data_noICU, patientid)
df <- GH_data_noICU[J(unique(patientid)), mult = "first"]
#select variables we interested
df <- df %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, facilityzip, postalcode, facilityname))
#create a list for checking the potential categorical predictors
category_check_list <-
df %>%
dplyr::select(is30dayreadmit, evisit, mews, cindex, gender, race, religion, maritalstatus, insurancetype) %>%
apply(2, table)
names(category_check_list) <- c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype")
category_check_tbl <- tibble(variable = c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype"),
check_list = category_check_list)
#the summary data of potential continous predictors
df %>%
dplyr::select(-c(is30dayreadmit, evisit, mews, cindex, gender, race,
religion, maritalstatus, insurancetype)) %>%
dplyr::select(-c(patientid, visitid, losdays2, num_visit)) %>%
gather(key = continuous_variable, value = value, ageyear:bpdiastolic) %>%
group_by(continuous_variable) %>%
summarise(min = min(value, na.rm = T),
mean = mean(value, na.rm = T),
median = median(value, na.rm = T),
max = max(value, na.rm = T))
#we find the following four predictors should be combined
category_check_tbl$check_list[3]             #mews
category_check_tbl$check_list[4]             #cindex
category_check_tbl$check_list[6]             #race
category_check_tbl$check_list[8]             #maritalstatus
#combine the level we choose
df$mews<-replace(df$mews, df$mews>3, "further deterioration/immediate action required")
df$mews<-replace(df$mews, df$mews<4, "normal/increase caution")
df$cindex<-replace(df$cindex, df$cindex<3,"normal/mild")
df$cindex<-replace(df$cindex, df$cindex>2,"moderate/severe")
df$race<-replace(df$race, df$race=="Natv Hawaii/Pacf Isl","Other/Multiracial")
df$maritalstatus<-replace(df$maritalstatus, df$maritalstatus=="Civil Union","Married")
#change temperature and bmi
df[df$temperature < 24] <- NA
df[df$temperature > 47] <- NA
df[df$bmi < 7] <- NA
ggplot(df,aes(x = temperature))+
geom_histogram()
ggplot(df,aes(x = temperature))+
geom_histogram(bins = 50)
ggplot(df,aes(x = temperature))+
geom_histogram()
ggplot(df,aes(x = temperature))+
geom_boxplot()
ggplot(df,aes(x = temperature))+
geom_density()
boxplot(df$temperature)
rm(list=ls())
#clean data and converting some variables
GH_data <- read_excel("GHProject_Dataset.xlsx") %>%
clean_names() %>%
group_by(patientid) %>%
dplyr::mutate(is30dayreadmit = as.character(is30dayreadmit))
#count number of visit and select ICU=0
mul <- count(GH_data)
GH_data_noICU <- left_join(GH_data,mul,by = "patientid") %>%
filter(icu_flag == 0) %>%
rename(num_visit = n) %>%
data.table()
#select first visit
setkey(GH_data_noICU, patientid)
df <- GH_data_noICU[J(unique(patientid)), mult = "first"]
#select variables we interested
df <- df %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, facilityzip, postalcode, facilityname))
#create a list for checking the potential categorical predictors
category_check_list <-
df %>%
dplyr::select(is30dayreadmit, evisit, mews, cindex, gender, race, religion, maritalstatus, insurancetype) %>%
apply(2, table)
names(category_check_list) <- c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype")
category_check_tbl <- tibble(variable = c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype"),
check_list = category_check_list)
#the summary data of potential continous predictors
df %>%
dplyr::select(-c(is30dayreadmit, evisit, mews, cindex, gender, race,
religion, maritalstatus, insurancetype)) %>%
dplyr::select(-c(patientid, visitid, losdays2, num_visit)) %>%
gather(key = continuous_variable, value = value, ageyear:bpdiastolic) %>%
group_by(continuous_variable) %>%
summarise(min = min(value, na.rm = T),
mean = mean(value, na.rm = T),
median = median(value, na.rm = T),
max = max(value, na.rm = T))
#we find the following four predictors should be combined
category_check_tbl$check_list[3]             #mews
category_check_tbl$check_list[4]             #cindex
category_check_tbl$check_list[6]             #race
category_check_tbl$check_list[8]             #maritalstatus
df$mews<-replace(df$mews, df$mews>3, "further deterioration/immediate action required")
df$mews<-replace(df$mews, df$mews<4, "normal/increase caution")
df$cindex<-replace(df$cindex, df$cindex<3,"normal/mild")
df$cindex<-replace(df$cindex, df$cindex>2,"moderate/severe")
df$race<-replace(df$race, df$race=="Natv Hawaii/Pacf Isl","Other/Multiracial")
df$maritalstatus<-replace(df$maritalstatus, df$maritalstatus=="Civil Union","Married")
#change temperature and bmi
boxplot(df$temperature)
#combine the level we choose
df$mews<-replace(df$mews, df$mews>3, "further deterioration/immediate action required")
df$mews<-replace(df$mews, df$mews<4, "normal/increase caution")
df$cindex<-replace(df$cindex, df$cindex<3,"normal/mild")
df$cindex<-replace(df$cindex, df$cindex>2,"moderate/severe")
df$race<-replace(df$race, df$race=="Natv Hawaii/Pacf Isl","Other/Multiracial")
df$maritalstatus<-replace(df$maritalstatus, df$maritalstatus=="Civil Union","Married")
#change temperature and bmi
df[df$temperature < 24] <- NA
df[df$temperature > 47] <- NA
df[df$bmi < 7] <- NA
#histogram of outcome
outcome_nontran <-
ggplot(df,aes(x = losdays2))+
geom_histogram(bins = 20) +
ggtitle("histogram of length of days") +
theme(plot.title = element_text(hjust = 0.5))
outcome_tran <- ggplot(df,aes(x = log(losdays2)))+
geom_histogram(bins = 15) +
ggtitle("histogram of log(length of days)") +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(outcome_nontran, outcome_tran)
#use log of losdays2
df <- df %>%
mutate(log_los=log(losdays2))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(readxl)
library(data.table)
library(HH)
library(leaps)
library(car)
library(gridExtra)
#histogram of outcome
outcome_nontran <-
ggplot(df,aes(x = losdays2))+
geom_histogram(bins = 20) +
ggtitle("histogram of length of days") +
theme(plot.title = element_text(hjust = 0.5))
outcome_tran <- ggplot(df,aes(x = log(losdays2)))+
geom_histogram(bins = 15) +
ggtitle("histogram of log(length of days)") +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(outcome_nontran, outcome_tran)
#use log of losdays2
df <- df %>%
mutate(log_los=log(losdays2))
rm(list=ls())
#clean data and converting some variables
GH_data <- read_excel("GHProject_Dataset.xlsx") %>%
clean_names() %>%
group_by(patientid) %>%
dplyr::mutate(is30dayreadmit = as.character(is30dayreadmit))
#count number of visit and select ICU=0
mul <- count(GH_data)
GH_data_noICU <- left_join(GH_data,mul,by = "patientid") %>%
filter(icu_flag == 0) %>%
rename(num_visit = n) %>%
data.table()
#select first visit
setkey(GH_data_noICU, patientid)
df <- GH_data_noICU[J(unique(patientid)), mult = "first"]
#select variables we interested
df <- df %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, facilityzip, postalcode, facilityname))
#create a list for checking the potential categorical predictors
category_check_list <-
df %>%
dplyr::select(is30dayreadmit, evisit, mews, cindex, gender, race, religion, maritalstatus, insurancetype) %>%
apply(2, table)
names(category_check_list) <- c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype")
category_check_tbl <- tibble(variable = c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype"),
check_list = category_check_list)
#the summary data of potential continous predictors
df %>%
dplyr::select(-c(is30dayreadmit, evisit, mews, cindex, gender, race,
religion, maritalstatus, insurancetype)) %>%
dplyr::select(-c(patientid, visitid, losdays2, num_visit)) %>%
gather(key = continuous_variable, value = value, ageyear:bpdiastolic) %>%
group_by(continuous_variable) %>%
summarise(min = min(value, na.rm = T),
first_quantile = quantile(value,  probs = 0.25, na.rm = T),
median = median(value, na.rm = T),
third_quantile = quantile(value,  probs = 0.75, na.rm = T),
max = max(value, na.rm = T))
#we find the following four predictors should be combined
category_check_tbl$check_list[3]             #mews
category_check_tbl$check_list[4]             #cindex
category_check_tbl$check_list[6]             #race
category_check_tbl$check_list[8]             #maritalstatus
#combine the level we choose
df$mews<-replace(df$mews, df$mews>3, "further deterioration/immediate action required")
df$mews<-replace(df$mews, df$mews<4, "normal/increase caution")
df$cindex<-replace(df$cindex, df$cindex<3,"normal/mild")
df$cindex<-replace(df$cindex, df$cindex>2,"moderate/severe")
df$race<-replace(df$race, df$race=="Natv Hawaii/Pacf Isl","Other/Multiracial")
df$maritalstatus<-replace(df$maritalstatus, df$maritalstatus=="Civil Union","Married")
#change temperature and bmi
df[df$temperature < 24] <- NA
df[df$temperature > 47] <- NA
df[df$bmi < 7] <- NA
df[df$bmi > 50] <- NA
df[df$heartrate>220]<- NA
df[df$o2sat>200]<- NA
df[df$respirationrate>50]<-NA
#omit the missing observations
df <- df %>% na.omit()
View(df)
#clean data and converting some variables
GH_data <- read_excel("GHProject_Dataset.xlsx") %>%
clean_names() %>%
group_by(patientid) %>%
dplyr::mutate(is30dayreadmit = as.character(is30dayreadmit))
#count number of visit and select ICU=0
mul <- count(GH_data)
GH_data_noICU <- left_join(GH_data,mul,by = "patientid") %>%
filter(icu_flag == 0) %>%
rename(num_visit = n) %>%
data.table()
#select first visit
setkey(GH_data_noICU, patientid)
df <- GH_data_noICU[J(unique(patientid)), mult = "first"]
#select variables we interested
df <- df %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, facilityzip, postalcode, facilityname))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(readxl)
library(data.table)
library(HH)
library(leaps)
library(car)
library(gridExtra)
# Chunk 2
#clean data and converting some variables
GH_data <- read_excel("GHProject_Dataset.xlsx") %>%
clean_names() %>%
group_by(patientid) %>%
dplyr::mutate(is30dayreadmit = as.character(is30dayreadmit))
#count number of visit and select ICU=0
mul <- count(GH_data)
GH_data_noICU <- left_join(GH_data,mul,by = "patientid") %>%
filter(icu_flag == 0) %>%
rename(num_visit = n) %>%
data.table()
#select first visit
setkey(GH_data_noICU, patientid)
df <- GH_data_noICU[J(unique(patientid)), mult = "first"]
#select variables we interested
df <- df %>%
dplyr::select(-c(loshours, admitdtm, icu_flag, facilityzip, postalcode, facilityname))
# Chunk 3
#create a list for checking the potential categorical predictors
category_check_list <-
df %>%
dplyr::select(is30dayreadmit, evisit, mews, cindex, gender, race, religion, maritalstatus, insurancetype) %>%
apply(2, table)
names(category_check_list) <- c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype")
category_check_tbl <- tibble(variable = c("is30dayreadmit", "evisit", "mews", "cindex", "gender",
"race", "religion", "maritalstatus", "insurancetype"),
check_list = category_check_list)
#the summary data of potential continous predictors
df %>%
dplyr::select(-c(is30dayreadmit, evisit, mews, cindex, gender, race,
religion, maritalstatus, insurancetype)) %>%
dplyr::select(-c(patientid, visitid, losdays2, num_visit)) %>%
gather(key = continuous_variable, value = value, ageyear:bpdiastolic) %>%
group_by(continuous_variable) %>%
summarise(min = min(value, na.rm = T),
first_quantile = quantile(value,  probs = 0.25, na.rm = T),
median = median(value, na.rm = T),
third_quantile = quantile(value,  probs = 0.75, na.rm = T),
max = max(value, na.rm = T))
#we find the following four predictors should be combined
category_check_tbl$check_list[3]             #mews
category_check_tbl$check_list[4]             #cindex
category_check_tbl$check_list[6]             #race
category_check_tbl$check_list[8]             #maritalstatus
# Chunk 4
#combine the level we choose
df$mews<-replace(df$mews, df$mews>3, "further deterioration/immediate action required")
df$mews<-replace(df$mews, df$mews<4, "normal/increase caution")
df$cindex<-replace(df$cindex, df$cindex>5,"severe")
df$cindex<-replace(df$cindex, df$cindex==3|df$cindex==4,"moderate")
df$cindex<-replace(df$cindex, df$cindex==2|df$cindex==1,"mild")
df$cindex<-replace(df$cindex, df$cindex==0,"normal")
df$race<-replace(df$race, df$race=="Natv Hawaii/Pacf Isl","Other/Multiracial")
df$maritalstatus<-replace(df$maritalstatus, df$maritalstatus=="Civil Union","Married")
#change temperature and bmi
df[df$temperature < 24] <- NA
df[df$temperature > 47] <- NA
df[df$bmi < 7] <- NA
df[df$bmi > 50] <- NA
df[df$heartrate>220]<- NA
df[df$o2sat>200]<- NA
df[df$respirationrate>50]<-NA
#omit the missing observations
df <- df %>% na.omit()
# Chunk 5
#histogram of outcome
outcome_nontran <-
ggplot(df,aes(x = losdays2))+
geom_histogram(bins = 20) +
ggtitle("histogram of length of days") +
theme(plot.title = element_text(hjust = 0.5))
outcome_tran <- ggplot(df,aes(x = log(losdays2)))+
geom_histogram(bins = 15) +
ggtitle("histogram of log(length of days)") +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(outcome_nontran, outcome_tran)
#use log of losdays2
df <- df %>%
mutate(log_los=log(losdays2))
lm_is<-lm(log_los~factor(is30dayreadmit),data=df)
lm_mews<-lm(log_los~factor(mews),data=df)
lm_cindex<-lm(log_los~cindex,data=df)
lm_ageyear<-lm(log_los~ageyear,data=df)
lm_ageyear<-lm(log_los~ageyear,data=df)
lm_evisit<-lm(log_los~evisit,data=df)
lm_gender<-lm(log_los~factor(gender),data=df) # not sig
lm_race<-lm(log_los~factor(race),data=df) #not sig
lm_religion<-lm(log_los~factor(religion),data=df) #not sig
lm_maritalstatus<-lm(log_los~factor(maritalstatus),data=df) #not sig
lm_insurancetype<-lm(log_los~factor(insurancetype),data=df) #not sig?
lm_bmi<-lm(log_los~bmi,data=df)
lm_is<-lm(log_los~factor(is30dayreadmit),data=df)
lm_mews<-lm(log_los~factor(mews),data=df)
lm_cindex<-lm(log_los~cindex,data=df)
lm_evisit<-lm(log_los~evisit,data=df)
lm_ageyear<-lm(log_los~ageyear,data=df)
lm_gender<-lm(log_los~factor(gender),data=df) # not sig
lm_race<-lm(log_los~factor(race),data=df) #not sig
lm_religion<-lm(log_los~factor(religion),data=df) #not sig
lm_maritalstatus<-lm(log_los~factor(maritalstatus),data=df) #not sig
lm_insurancetype<-lm(log_los~factor(insurancetype),data=df) #not sig?
lm_bmi<-lm(log_los~bmi,data=df)
lm_tem<-lm(log_los~temperature,data=df)
lm_hear<-lm(log_los~heartrate,data=df)
lm_res<-lm(log_los~respirationrate,data=df)
lm_bpd<-lm(log_los~bpdiastolic,data=df)
lm_bps<-lm(log_los~bpsystolic,data=df)
summary(lm_is)
summary(lm_mews)
summary(lm_cindex)
summary(lm_evisit)
summary(lm_ageyear)
summary(lm_gender)
summary(lm_race)
summary(lm_religion)
summary(lm_maritalstatus)
summary(lm_insurancetype)
summary(lm_bmi)
summary(lm_tem)
summary(lm_hear)
summary(lm_res)
summary(lm_bpd)
summary(lm_bps)
lm13<-lm(log_los~mews+is30dayreadmit+cindex+evisit+ageyear+bmi+temperature+heartrate+respirationrate+bpdiastolic+bpsystolic,data=df)
summary(lm13)
step(lm13, direction='backward')
step(lm_full, direction='both', trace = 0)
lm_full<-lm(log_los~mews+is30dayreadmit+cindex+evisit+ageyear+bmi+temperature+heartrate+respirationrate+bpdiastolic+bpsystolic,data=df)
step(lm_full, direction='both', trace = 0)
best <- function(model, ...)
{
subsets <- regsubsets(formula(model), model.frame(model),nvmax=length(model$coefficients)-1, ...)
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))
return(subsets)
}
# Select the 'best' 1 models of all subsets
round(best(lm_full, nbest = 1), 4) #remove mews and bmi
